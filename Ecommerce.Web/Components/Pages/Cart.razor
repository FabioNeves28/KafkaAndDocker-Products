@page "/cart/{ProductId:int}"
@using Ecommerce.Model
@inject HttpClient Http
@inject IJSRuntime JsRuntime

<h3>Cart</h3>

<form>
    <div class="form-group mb-4">
        <label>Customer name</label>
        <input type="text" class="form-control" @bind="Order.CustomerName">
    </div>
    <div class="form-group mb-4">
        <label>Product name</label>
        <input type="text" class="form-control" @bind="Product.Name">
    </div>
    <div class="form-group mb-4">
        <label>Quantity</label>
        <input type="number" class="form-control" @bind="Order.Quantity">
    </div>
    <button type="button" class="btn btn-primary" @onclick="() => CreateOrder()">Create order</button>
</form>

@code {
    [Parameter]
    public int ProductId { get; set; }
    public OrderModel Order { get; set; } = new OrderModel();
    public ProductModel Product { get; set; } = new ProductModel();

    protected override async Task OnInitializedAsync()
    {
        Order.ProductId = ProductId;
        Product = await Http.GetFromJsonAsync<ProductModel>($"https://localhost:7145/api/Product/{ProductId}");
        await base.OnParametersSetAsync();
    }

    public async Task CreateOrder()
    {
        var res = await Http.PostAsJsonAsync<OrderModel>("https://localhost:7060/api/Order", Order);
        if (res.IsSuccessStatusCode)
        {
            await JsRuntime.InvokeVoidAsync("alert", "Create order success");
        }
    }

}
